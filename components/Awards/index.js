import React from "react";
import Image from "next/image";
import { Button, Col, Container, Row } from "react-bootstrap";
import style from "./awards.module.scss";
import { addMultiClasses } from "../../common/common";

const Awards = ({
  awardData,
  clutchreviewData,
  variant,
  type,
  title,
  desc,
  align,
  height,
  mb,
  scrollToForm,
  logogap,
  ForPaddingTop,
  ForImg,
  marginbottom = false,
}) => {
  const ForPadding = ForPaddingTop == true ? style.ForPaddingTop : "";
  const ForImgRow = ForImg == true ? style.ForImageRow : "";
  const margin_bottom_carrers =
    marginbottom === true ? style.margin_bottom_carrers : "";
  return (
    <>
      {type === "clutchreview" ? (
        <Container
          fluid
          className={style.clutchreview__container}
          style={{ background: variant === "yellow" ? "#FEBE10" : "#262531" }}
        >
          <Container
            style={{
              display: "flex",
              flexDirection: "column",
              alignItems: "center",
              // gap: "24px",
            }}
          >
            <h2
              className={style.award__title}
              style={{ color: variant === "yellow" ? "#262531" : "#FFFFFF" }}
            >
              {clutchreviewData?.title}
            </h2>
            <div className={style.clutchreview__box__wrapper}>
              {clutchreviewData?.image?.data?.map((image) => {
                return (
                  <React.Fragment key={image.id}>
                    <div className={style.clutchreview__box}>
                      <Image
                        priority
                        layout="intrinsic"
                        height={image?.attributes?.height}
                        width={image?.attributes?.width}
                        src={image?.attributes?.url}
                        alt={image?.attributes?.alternativeText}
                        objectFit="contain"
                      />
                    </div>
                  </React.Fragment>
                );
              })}

              {/* <div className={style.clutchreview__box}></div>
              <div className={style.clutchreview__box}></div> */}
            </div>
            {clutchreviewData?.description && (
              <div
                dangerouslySetInnerHTML={{
                  __html: clutchreviewData?.description,
                }}
                className={style.clutch_review_description}
              ></div>
            )}
            <Button
              className={style.clutchreview__button}
              style={{
                background: variant === "yellow" ? "#262531" : "#F05443",
              }}
              onClick={scrollToForm}
            >
              Get In Touch
            </Button>
          </Container>
        </Container>
      ) : type === "award_certification" ? (
        <Container
          fluid
          style={{
            background:
              variant === "primary"
                ? "#FFFFFF"
                : variant === "secondary"
                ? "#262531"
                : "",
          }}
        >
          <Container className={style.awardcerti__container}>
            <h2
              style={{
                color:
                  variant === "primary"
                    ? "#262531"
                    : variant === "secondary"
                    ? "#FFFFFF"
                    : "",
              }}
            >
              {awardData?.title}
            </h2>
            <Row className={style.awardcerti__row}>
              {awardData?.AwardandCertiBox.map((data) => {
                return (
                  <React.Fragment key={data?.id}>
                    <Col
                      md={4}
                      sm={12}
                      className={addMultiClasses([
                        style.awardcerti__itemwrapper,
                        data?.showinmobile !== true
                          ? style.hide_for_mobile
                          : "",
                      ])}
                    >
                      <div className={style.awardcerti__leftimg}>
                        <LeftSVG />
                      </div>
                      <div
                        className={style.awardcerti__content}
                        style={{
                          color:
                            variant === "primary"
                              ? "#262531"
                              : variant === "secondary"
                              ? "#FFFFFF"
                              : "",
                        }}
                      >
                        <div className={style.award_title}>{data?.title}</div>
                        <div>
                          <p>{data?.awardby}</p>
                          <img
                            src={data?.image?.data?.attributes?.url}
                            height={data?.image?.data?.attributes?.height}
                            width={data?.image?.data?.attributes?.width}
                            alt={data?.image?.data?.attributes?.alternativeText}
                          />
                        </div>
                      </div>
                      <div className={style.awardcerti__rightimg}>
                        <RightSVG />
                      </div>
                    </Col>
                  </React.Fragment>
                );
              })}
            </Row>
          </Container>
        </Container>
      ) : (
        <Container
          className={addMultiClasses([style.main, ForPadding])}
          fluid
          style={{
            background:
              variant === "primary"
                ? "#FFFFFF"
                : variant === "secondary"
                ? "#262531"
                : variant === "orange"
                ? "#F05443"
                : "",
            height: height,
          }}
        >
          <Container>
            {title && (
              <h2
                className={addMultiClasses([
                  style.award__title,
                  margin_bottom_carrers,
                ])}
                style={{ color: variant === "primary" ? "#262531" : "#FFFFFF" }}
              >
                {awardData?.title}
              </h2>
            )}
            {desc && (
              <h6
                className={style.award__desc}
                style={{
                  color: variant === "primary" ? "#383838" : "#FFFFFF",
                }}
              >
                {awardData?.description}
              </h6>
            )}

            <div
              className={
                align !== "horizontal"
                  ? style.award__container
                  : style.award__container__horizontal
              }
            >
              {awardData?.images?.data?.map((data) => {
                return (
                  <React.Fragment key={data?.id}>
                    <div
                      className={addMultiClasses([
                        style.image__container,
                        ForImgRow,
                      ])}
                    >
                      <Image
                        priority
                        src={data?.attributes?.url}
                        height={data.attributes.formats.thumbnail.height}
                        width={data.attributes.formats.thumbnail.width}
                        // objectFit="contain"
                        // sizes="(max-width: 768px) 100vw,
                        //   (max-width: 1200px) 50vw,
                        //   (max-width:500px) 24vw"
                      />
                      {/* <Image
                    height={data.attributes.formats.thumbnail.height}
                    width={data.attributes.formats.thumbnail.width}
                    layout="intrinsic"
                    objectFit="contain"
                    src={data?.attributes?.url}
                  /> */}
                    </div>
                  </React.Fragment>
                );
              })}
            </div>
          </Container>
        </Container>
      )}
    </>
  );
};

export default Awards;

const LeftSVG = (props) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={55}
      height={126}
      fill="none"
      {...props}
    >
      <path
        fill="#858585"
        d="M55 122.46c-.02.164-.283.226-.606.164-5.294-1.151-10.163-3.535-14.79-6.269-4.628-2.734-8.87-6.167-12.65-10.01-7.698-7.626-13.032-17.575-15.679-28.14l-.525-1.973-.323-2.015-.647-4.049c-.283-1.336-.243-2.713-.344-4.07l-.202-4.09c0-5.447.849-10.977 2.83-16.074a76.345 76.345 0 0 1 7.172-14.615c2.809-4.645 6.021-9.003 9.436-13.196.202-.247.465-.35.566-.267.121.102.06.39-.142.616-3.394 4.173-6.607 8.53-9.395 13.135a75.906 75.906 0 0 0-7.133 14.512c-3.92 10.174-3.273 21.48-.768 31.942 4.95 21.151 22.207 38.561 42.675 44.008.303.062.525.247.505.411l.02-.02Z"
      />
      <path
        fill="#858585"
        d="M35.724 13.293c-2.889 3.227-5.738 5.92-7.88 7.872-2.101 1.973-3.556 3.104-3.556 3.104s.687-1.706 2.061-4.317c1.415-2.59 3.597-6.002 6.567-9.31A49.689 49.689 0 0 1 41.463 3.2C43.888 1.556 45.524.754 45.524.754s-1.01 1.542-2.748 3.864c-1.717 2.344-4.122 5.468-7.031 8.675h-.02ZM23.135 34.197c-1.333 1.357-2.606 2.672-3.819 3.905-1.151 1.152-2.303 2.097-3.111 2.92-1.718 1.644-2.89 2.527-2.89 2.527s.203-.493.546-1.336c.384-.822.849-2.055 1.616-3.412a85.58 85.58 0 0 1 2.809-4.501c1.192-1.542 2.465-3.145 3.9-4.646 1.495-1.439 2.91-2.672 4.203-3.658a44.835 44.835 0 0 1 3.596-2.323c1.01-.596 1.88-.987 2.465-1.233.586-.227.91-.37.91-.37s-1.233 1.541-3.112 3.884c-.95 1.131-2.061 2.447-3.274 3.885-1.192 1.336-2.505 2.796-3.879 4.358h.04ZM16.529 50.291c-1.05 1.172-1.758 2.22-2.607 3.145a40.261 40.261 0 0 1-2.242 2.303c-1.152 1.274-1.96 1.952-1.96 1.952s.08-.452.202-1.233c.08-.781.485-1.85.95-3.083.525-1.213.929-2.631 1.818-3.967.828-1.357 1.738-2.714 2.748-3.906 2.283-2.343 4.203-3.72 5.86-4.42 1.576-.74 2.546-.904 2.546-.904l-.627.925c-.384.596-1.07 1.398-1.677 2.385a45.686 45.686 0 0 1-2.344 3.248c-.849 1.171-1.657 2.404-2.667 3.576v-.02ZM15.8 64.988c-.606 1.418-1.313 2.672-1.92 3.72a24.257 24.257 0 0 1-1.596 2.632c-.99 1.418-1.758 2.096-1.758 2.096s-.06-1.932.122-4.604c.222-1.336.525-2.857.929-4.399.202-.76.424-1.542.667-2.302.242-.76.525-1.5.95-2.158.787-1.336 1.596-2.344 2.363-3.125.728-.78 1.678-1.336 2.344-1.747 1.395-.801 2.324-.986 2.324-.986s-.141.328-.404.924c-.142.288-.303.638-.505 1.049a8.844 8.844 0 0 0-.586 1.336c-.344.966-.829 2.076-1.415 3.289-.444 1.356-.909 2.836-1.535 4.255l.02.02ZM18.73 81.617c-.384 2.837-1.192 4.83-1.92 6.043-.727 1.234-1.333 1.665-1.333 1.665l-.121-.37c-.04-.246-.121-.616-.202-1.068a73.819 73.819 0 0 1-.546-3.618c-.08-.72-.202-1.48-.202-2.282 0-.801.04-1.644.101-2.466.122-1.645.263-3.248.687-4.687.97-2.919 2.203-4.48 3.193-5.344.99-.863 1.737-1.048 1.737-1.048s-.06 1.85-.404 4.44c-.242 1.315-.222 2.733-.384 4.234-.1 1.48-.444 3.104-.626 4.501h.02ZM24.933 94.464c-.162 2.384-.788 3.843-1.455 4.686-.666.863-1.394 1.11-1.394 1.11s-.222-.431-.525-1.172a50.253 50.253 0 0 1-.93-3.062c-.747-2.364-.97-5.509-.586-7.79.344-2.282 1.536-3.536 2.385-4.153.889-.637 1.616-.719 1.616-.719s.04.411.08 1.11c.041.699.243 1.603.365 2.693.141 1.09.202 2.364.303 3.638.141 1.233.222 2.508.141 3.68v-.021ZM36.713 106.406c.282 2.179-.324 3.659-1.071 4.543-.748.884-1.597 1.192-1.597 1.192s-1.252-1.541-2.343-3.782c-1.193-2.138-2.061-5.056-2.021-7.256.02-2.2 1.091-3.494 1.96-4.193.91-.72 1.718-.884 1.718-.884s.686 1.439 1.414 3.536c.323 1.068.808 2.158 1.172 3.35.384 1.172.626 2.425.768 3.515v-.021ZM50.01 114.608c.868 2.035.747 3.617.343 4.666-.404 1.048-1.112 1.582-1.112 1.582s-1.636-1.151-3.313-3.021c-.87-.884-1.698-1.973-2.405-3.124-.707-1.11-1.293-2.261-1.576-3.392-.566-2.22 0-3.679.606-4.604.627-.925 1.374-1.336 1.374-1.336s.243.329.667.884c.404.575.97 1.377 1.637 2.24 1.293 1.829 2.89 4.029 3.758 6.105h.02Z"
      />
      <path
        fill="#858585"
        d="M15.519 29.367c-.384 1.027-.748 2.014-1.03 2.96a48.329 48.329 0 0 0-.648 2.754c-.343 1.747-.606 3.206-.626 4.502-.1 2.548.08 3.946.08 3.946s.223-.473.587-1.316c.384-.822.828-2.055 1.475-3.473a113.209 113.209 0 0 0 2.162-4.892 92.673 92.673 0 0 0 2.465-5.674c.849-1.932 1.515-3.782 2.081-5.447a54.993 54.993 0 0 0 1.394-4.296c.303-1.171.566-2.158.768-2.857l.223-1.027s-1.455 1.603-3.294 4.296a42.34 42.34 0 0 0-2.95 4.727c-.485.884-.99 1.83-1.475 2.775a55.885 55.885 0 0 0-1.253 3.022h.04ZM6.425 47.147c-.06 1.767.324 3.453.627 4.789.343 1.356.707 2.425 1.09 3.268.91 1.727 1.637 2.487 1.637 2.487s0-.452-.02-1.254c-.08-.801.04-1.911.101-3.247.122-1.316 0-2.94.223-4.563a60.72 60.72 0 0 0 .262-5.16c.283-3.391-.04-6.31-.141-8.18-.182-1.912-.485-3.002-.485-3.002s-.202.453-.525 1.254c-.304.822-.829 1.891-1.193 3.35a61.641 61.641 0 0 0-1.151 4.79c-.303 1.768-.384 3.68-.404 5.488l-.02-.02ZM3.658 65.749c.788 1.582 1.536 2.857 2.364 3.864a18.595 18.595 0 0 0 2.384 2.323c1.395 1.11 2.324 1.48 2.324 1.48s-.546-1.81-1.556-4.4c-.384-1.294-.828-2.795-1.394-4.377a71.34 71.34 0 0 0-.91-2.385c-.343-.801-.686-1.603-.949-2.446a45.781 45.781 0 0 0-1.798-4.46c-.647-1.316-1.01-2.323-1.475-3.186-.87-1.706-1.576-2.57-1.576-2.57s-.04.576-.122 1.583c-.02.494-.06 1.09-.1 1.768-.04.658-.04 1.418.06 2.282.162 1.685.404 3.597.768 5.488a34.45 34.45 0 0 0 1.98 5.056v-.02ZM7.739 85.646c2.465 2.446 4.405 3.33 5.738 3.68.667.164 1.192.184 1.556.164.364-.021.546-.083.546-.083s-.344-.431-.829-1.212a87.218 87.218 0 0 0-2.101-3.104c-.425-.617-.95-1.275-1.394-1.973-.425-.7-.89-1.419-1.354-2.18-.93-1.48-2.061-2.96-3.031-4.295-1.859-2.713-3.576-4.214-4.83-4.995C.789 70.867 0 70.805 0 70.805s.748 2.467 2 5.591c.546 1.562 1.536 3.248 2.526 4.872 1.03 1.603 1.98 3.186 3.233 4.398l-.02-.02ZM15.679 101.021c2.364 1.089 4 .802 5.01.349 1.011-.452 1.395-1.089 1.395-1.089s-.404-.288-1.03-.802a80.923 80.923 0 0 0-2.466-2.096c-2.121-1.562-4.445-3.782-6.748-5.118-1.172-.658-2.122-1.07-2.91-1.316-.808-.226-1.475-.247-2.02-.185-1.092.144-1.617.699-1.617.699s1.172 1.973 3.253 4.07c1.01 1.069 2.122 2.22 3.334 3.186 1.273.925 2.586 1.747 3.778 2.281l.02.021ZM29.237 116.334c2.465-.143 3.617-1.212 4.223-2.199.586-.987.626-1.912.626-1.912s-1.858-.657-4.243-1.582c-2.465-.802-5.354-1.953-7.8-2.22-2.464-.226-3.798.39-4.606 1.274a3.912 3.912 0 0 0-.95 1.85s.485.329 1.294.822c.808.494 1.94 1.131 3.212 1.768 1.253.678 2.748 1.192 4.183 1.603 1.455.391 2.829.679 4.061.617v-.021ZM44.714 125.523c2.667-.555 3.738-1.83 4.203-2.878.444-1.069.303-1.932.303-1.932s-1.98-.268-4.83-.617c-2.727-.349-6.121-.843-8.748-.76-2.667.143-4.062 1.007-4.749 1.911-.707.905-.727 1.829-.727 1.829s.566.247 1.515.576c.95.329 2.263.781 3.718 1.192a42.97 42.97 0 0 0 4.789.843c1.637.123 3.233.082 4.546-.164h-.02Z"
      />
    </svg>
  );
};
const RightSVG = (props) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width={55}
    height={126}
    fill="none"
    {...props}
  >
    <path
      fill="#858585"
      d="M0 121.813c.02.164.283.226.606.164 5.294-1.151 10.164-3.535 14.791-6.269 4.627-2.734 8.87-6.167 12.649-10.01 7.699-7.626 13.033-17.575 15.68-28.14l.525-1.973.324-2.015.646-4.049c.283-1.336.243-2.713.344-4.07l.202-4.09c0-5.447-.849-10.977-2.83-16.074a76.349 76.349 0 0 0-7.172-14.615c-2.809-4.645-6.022-9.003-9.437-13.196-.201-.247-.464-.35-.565-.267-.122.103-.06.39.141.616 3.395 4.173 6.607 8.53 9.396 13.135a75.898 75.898 0 0 1 7.133 14.512c3.92 10.174 3.273 21.48.767 31.942-4.95 21.151-22.206 38.561-42.674 44.008-.303.062-.526.247-.506.411l-.02-.02Z"
    />
    <path
      fill="#858585"
      d="M19.275 12.646c2.89 3.227 5.739 5.92 7.88 7.872 2.102 1.973 3.557 3.104 3.557 3.104s-.687-1.706-2.061-4.317c-1.415-2.59-3.597-6.002-6.567-9.31a49.695 49.695 0 0 0-8.547-7.442C11.112.91 9.476.107 9.476.107s1.01 1.542 2.747 3.864c1.718 2.344 4.123 5.468 7.032 8.675h.02ZM31.863 33.55c1.333 1.357 2.606 2.672 3.819 3.905 1.151 1.151 2.303 2.097 3.111 2.92 1.718 1.644 2.89 2.528 2.89 2.528l-.546-1.337c-.384-.822-.849-2.055-1.616-3.412a85.556 85.556 0 0 0-2.809-4.501c-1.192-1.542-2.465-3.145-3.9-4.646-1.495-1.439-2.91-2.672-4.203-3.658a44.835 44.835 0 0 0-3.596-2.323 20.237 20.237 0 0 0-2.465-1.233c-.586-.226-.91-.37-.91-.37s1.233 1.541 3.112 3.885c.95 1.13 2.061 2.445 3.273 3.884 1.193 1.336 2.506 2.796 3.88 4.358h-.04ZM38.47 49.645c1.052 1.171 1.759 2.22 2.607 3.144a40.332 40.332 0 0 0 2.243 2.303c1.152 1.274 1.96 1.952 1.96 1.952s-.08-.452-.202-1.233c-.08-.781-.485-1.85-.95-3.083-.525-1.213-.929-2.631-1.818-3.967-.828-1.357-1.738-2.714-2.748-3.906-2.283-2.343-4.203-3.72-5.86-4.42-1.576-.74-2.546-.904-2.546-.904l.627.925c.384.597 1.07 1.398 1.677 2.385a45.667 45.667 0 0 0 2.344 3.248c.848 1.171 1.657 2.404 2.667 3.576v-.02ZM39.2 64.341c.607 1.418 1.314 2.672 1.92 3.72a24.247 24.247 0 0 0 1.597 2.631c.99 1.419 1.758 2.097 1.758 2.097s.06-1.932-.122-4.604a49.681 49.681 0 0 0-.929-4.399 49.512 49.512 0 0 0-.667-2.302c-.242-.76-.525-1.5-.95-2.158-.788-1.336-1.596-2.344-2.364-3.125-.727-.78-1.677-1.336-2.343-1.747-1.395-.801-2.324-.986-2.324-.986s.141.328.404.924c.141.288.303.638.505 1.049.222.41.424.863.586 1.336.344.966.828 2.076 1.414 3.289.445 1.356.91 2.836 1.536 4.254l-.02.021ZM36.269 80.97c.384 2.837 1.192 4.83 1.92 6.043.727 1.233 1.333 1.665 1.333 1.665l.121-.37c.04-.247.121-.617.202-1.069.162-.904.364-2.179.546-3.618.08-.719.202-1.48.202-2.281 0-.802-.04-1.645-.101-2.467-.121-1.644-.263-3.247-.687-4.686-.97-2.919-2.203-4.481-3.193-5.344-.99-.864-1.738-1.049-1.738-1.049s.061 1.85.405 4.44c.242 1.316.222 2.734.383 4.234.102 1.48.445 3.104.627 4.502h-.02ZM30.065 93.817c.162 2.384.788 3.844 1.455 4.686.666.864 1.394 1.11 1.394 1.11s.222-.431.525-1.171c.263-.781.606-1.85.93-3.063.747-2.364.97-5.509.586-7.79-.344-2.282-1.536-3.536-2.385-4.153-.889-.637-1.616-.719-1.616-.719s-.04.411-.081 1.11c-.04.699-.242 1.603-.364 2.693-.141 1.09-.202 2.364-.303 3.638-.141 1.233-.222 2.508-.141 3.68v-.021ZM18.287 105.759c-.283 2.179.324 3.659 1.071 4.543.748.884 1.596 1.192 1.596 1.192s1.253-1.541 2.344-3.782c1.193-2.138 2.061-5.056 2.021-7.256-.02-2.2-1.091-3.494-1.96-4.193-.91-.72-1.718-.884-1.718-.884s-.686 1.439-1.414 3.536c-.323 1.069-.808 2.158-1.172 3.35-.384 1.172-.626 2.426-.768 3.515v-.021ZM4.99 113.961c-.868 2.035-.747 3.617-.343 4.666.404 1.048 1.111 1.583 1.111 1.583s1.637-1.152 3.314-3.022c.87-.884 1.698-1.973 2.405-3.124.707-1.11 1.293-2.261 1.576-3.392.566-2.22 0-3.679-.606-4.604-.627-.925-1.374-1.336-1.374-1.336s-.243.329-.667.884c-.404.575-.97 1.377-1.637 2.24-1.293 1.829-2.89 4.029-3.758 6.105h-.02Z"
    />
    <path
      fill="#858585"
      d="M39.48 28.72c.384 1.027.748 2.014 1.03 2.96.264.965.466 1.89.648 2.754.343 1.747.606 3.206.626 4.501.1 2.549-.08 3.947-.08 3.947s-.223-.473-.587-1.316c-.384-.822-.828-2.055-1.475-3.474A113.333 113.333 0 0 1 37.48 33.2a92.82 92.82 0 0 1-2.465-5.673c-.849-1.932-1.516-3.782-2.081-5.447a54.966 54.966 0 0 1-1.394-4.296 114.764 114.764 0 0 0-.768-2.857l-.223-1.028s1.455 1.604 3.294 4.296a42.312 42.312 0 0 1 2.95 4.728c.485.884.99 1.83 1.475 2.775.445.986.869 2.014 1.253 3.021h-.04ZM48.574 46.5c.06 1.767-.324 3.453-.627 4.789-.343 1.356-.707 2.425-1.09 3.268-.91 1.727-1.638 2.487-1.638 2.487s0-.452.02-1.254c.082-.801-.04-1.911-.1-3.247-.122-1.316 0-2.94-.223-4.563a60.762 60.762 0 0 1-.262-5.16c-.283-3.391.04-6.31.141-8.18.182-1.912.485-3.002.485-3.002s.202.453.526 1.254c.303.822.828 1.891 1.192 3.35a61.599 61.599 0 0 1 1.151 4.79c.303 1.768.384 3.68.404 5.488l.02-.02ZM51.34 65.102c-.787 1.582-1.535 2.857-2.363 3.864a18.585 18.585 0 0 1-2.384 2.323c-1.395 1.11-2.324 1.48-2.324 1.48s.545-1.81 1.556-4.4c.384-1.294.828-2.794 1.394-4.377.283-.781.586-1.583.91-2.385.343-.801.686-1.603.949-2.446a45.759 45.759 0 0 1 1.798-4.46c.647-1.316 1.01-2.323 1.475-3.186.87-1.706 1.576-2.57 1.576-2.57s.04.576.121 1.583c.02.494.061 1.09.102 1.768.04.658.04 1.418-.061 2.282a59.605 59.605 0 0 1-.768 5.488 34.444 34.444 0 0 1-1.98 5.056v-.02ZM47.261 84.999c-2.465 2.446-4.405 3.33-5.738 3.679-.667.164-1.193.185-1.556.164a2.28 2.28 0 0 1-.546-.082s.344-.431.829-1.213a87.355 87.355 0 0 1 2.101-3.103c.424-.617.95-1.275 1.394-1.974.425-.698.89-1.418 1.354-2.178.93-1.48 2.061-2.96 3.031-4.296 1.859-2.714 3.576-4.214 4.83-4.995 1.252-.781 2.04-.843 2.04-.843s-.748 2.466-2 5.59c-.546 1.563-1.536 3.249-2.526 4.872-1.03 1.604-1.98 3.186-3.233 4.4l.02-.021ZM39.32 100.374c-2.364 1.089-4 .802-5.01.349-1.011-.452-1.395-1.089-1.395-1.089s.404-.288 1.03-.802a80.8 80.8 0 0 1 2.466-2.096c2.121-1.562 4.445-3.782 6.748-5.118 1.172-.658 2.122-1.07 2.91-1.316.808-.226 1.475-.247 2.02-.185 1.092.144 1.617.699 1.617.699s-1.172 1.973-3.253 4.07c-1.01 1.069-2.122 2.22-3.334 3.186-1.273.925-2.586 1.747-3.779 2.281l-.02.021ZM25.762 115.687c-2.465-.143-3.617-1.212-4.223-2.199-.586-.987-.627-1.912-.627-1.912s1.86-.657 4.244-1.582c2.465-.802 5.354-1.953 7.8-2.22 2.464-.226 3.798.39 4.606 1.274.788.843.95 1.85.95 1.85s-.485.329-1.294.822a44.952 44.952 0 0 1-3.212 1.768c-1.253.678-2.748 1.192-4.183 1.603-1.455.391-2.829.679-4.061.617v-.021ZM10.284 124.876c-2.667-.555-3.738-1.83-4.203-2.878-.445-1.069-.303-1.932-.303-1.932s1.98-.267 4.83-.617c2.727-.349 6.122-.843 8.748-.76 2.667.143 4.062 1.007 4.749 1.911.707.905.727 1.83.727 1.83s-.566.246-1.515.575c-.95.329-2.264.781-3.718 1.192-1.495.35-3.173.658-4.79.843-1.636.123-3.232.082-4.545-.164h.02Z"
    />
  </svg>
);
