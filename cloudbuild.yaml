steps:
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Authorize Cloud Build'
    entrypoint: 'bash'
    args:
      - -c
      - |
        apt-get install dnsutils -y &&
        cloudbuild_external_ip=$(dig @resolver4.opendns.com myip.opendns.com +short) &&
        gcloud container clusters update cluster-1 --region=europe-west2 --enable-master-authorized-networks --master-authorized-networks $cloudbuild_external_ip/32 &&
        echo $cloudbuild_external_ip
  # - name: 'gcr.io/cloud-builders/gke-deploy'
  #   args:
  #     - 'run'
  #     - '--filename=.k8s/'
  #     - '--image=europe-west2-docker.pkg.dev/fair-melody-396111/mtech/my-app:${SHORT_SHA}'
  #     - '--location=europe-west2'
  #     - '--cluster=cluster-1'
# options:
#   logging: CLOUD_LOGGING_ONLY
# # steps:
# # # This step deploys the new version of our container image
# # # in the "standard-cluster-private-1" Google Kubernetes Engine cluster.
    - name: 'gcr.io/cloud-builders/kubectl'
      id: Deploy
      args:
      - 'apply'
      - '-f'
      - '.k8s/'
      env:
      - 'CLOUDSDK_COMPUTE_REGION=europe-west2'
      - 'CLOUDSDK_COMPUTE_ZONE=europe-west2-a'  
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1' # Provide GKE Cluster Name
