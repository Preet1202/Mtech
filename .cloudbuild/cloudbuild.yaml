steps:
  # - name: 'gcr.io/cloud-builders/git'
  #   args:
  #     - 'rev-parse'
  #     - '--short'
  #     - 'main'
  #   id: get-tag
  # Docker Build
  - name: 'Pull SHORT_SHA'
    entrypoint: 'bash'
    args:
      - -c
      - |
        SHORT_SHA=$(git rev-parse --short main)
        echo $SHORT_SHA
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'europe-west2-docker.pkg.dev/fair-melody-396111/mtech/new:$SHORT_SHA', '-f', '.docker/Dockerfile', '.']
  # Docker push to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'europe-west2-docker.pkg.dev/fair-melody-396111/mtech/new:$SHORT_SHA']
#   - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#     id: 'Authorize Cloud Build'
#     entrypoint: 'bash'
#     args:
#       - -c
#       - |
#         apt-get install dnsutils -y &&
#         cloudbuild_external_ip=$(dig @resolver4.opendns.com myip.opendns.com +short) &&
#         gcloud container clusters update cluster-1 --region=europe-west2 --enable-master-authorized-networks --master-authorized-networks $cloudbuild_external_ip/32 &&
#         echo $cloudbuild_external_ip
#   - name: 'gcr.io/cloud-builders/gke-deploy'
#     args:
#       - 'run'
#       - '--filename=.k8s/deployment.yaml'
#       - '--image=europe-west2-docker.pkg.dev/fair-melody-396111/mtech/new:${SHORT_SHA}'
#       - '--location=europe-west2'
#       - '--cluster=cluster-1'
# # Store images in Google Artifact Registry 
# images:
#   - europe-west2-docker.pkg.dev/fair-melody-396111/mtech/new:${SHORT_SHA}
